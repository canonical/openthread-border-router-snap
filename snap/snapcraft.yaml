name: openthread-border-router
version: "0.1"
# license: TBA
summary: Snap packaging of OpenThread Border Router project for POSIX systems
description: Refer to https://snapcraft.io/openthread-border-router

base: core22

architectures:
  - build-on: amd64
  - build-on: arm64

grade: devel
confinement: devmode

layout:
  /usr/share/otbr-web/frontend:
    symlink: $SNAP/usr/share/otbr-web/frontend

# hooks:
#     install:
#         plugs: [network]

apps:
  # otbr-setup:
  #   command: bin/otbr-setup.sh
  #   daemon: oneshot
  #   install-mode: enable
  #   restart-delay: 10s

  otbr-agent:
    command: bin/otbr-agent
    daemon: simple
    install-mode: disable
    # restart-delay: 10s

  # Web GUI
  # The default port is 80
  otbr-web:
    after: [otbr-agent]
    command: bin/otbr-web
    daemon: simple
    install-mode: disable
    restart-delay: 3s

  ot-ctl:
    command: bin/ot-ctl
  
parts:
  build-bin:
    plugin: nil
    source: snap/local/build/bin
    override-build: |
      # Resources needed for the build
      mkdir -p $SNAPCRAFT_STAGE/snap/bin
      cp -v * $SNAPCRAFT_STAGE/snap/bin
  
  stage-bin:
    plugin: nil
    source: snap/local/stage/bin
    override-build: |
      mkdir -p $CRAFT_PART_INSTALL/bin/
      cp -v _initrc_install $CRAFT_PART_INSTALL/bin/
      cp -v nat44_install $CRAFT_PART_INSTALL/bin/

  otbr:
    after:
      - build-bin
    source: https://github.com/openthread/ot-br-posix.git
    source-tag: thread-reference-20230119
    source-depth: 1
    plugin: nil
    build-packages: 
      - libreadline-dev
      - libncurses-dev
      - build-essential
      - ninja-build
      - libcpputest-dev
      - libdbus-1-dev
      - libavahi-common-dev 
      - libavahi-client-dev
      - libjsoncpp-dev
      - libprotobuf-dev
      - protobuf-compiler
      - lsb-release
      - cmake
      # - sudo
      # Boost
      - libboost-dev
      - libboost-filesystem-dev
      - libboost-system-dev
      # web dependencies
      - nodejs
      - npm
    stage-packages:
      - iproute2
      - iputils-ping
      - rsyslog
      - libavahi-client3
      - iptables
      - ipset
      - dnsmasq-base
      - dnsmasq-utils
      - network-manager
      - dhcpcd5
      - libatm1
      - libjsoncpp-dev
    override-build: |
      ls -l $SNAPCRAFT_STAGE/snap/bin



      # The setup scripts use the following defaults:
      # NAT64=1
      # DNS64=0
      # DHCPV6_PD=0
      # NETWORK_MANAGER=0
      # BACKBONE_ROUTER=1
      # BORDER_ROUTING=1
      # WEB_GUI=1
      # REST_API=1
      #
      # from:
      # https://github.com/openthread/ot-br-posix/blob/main/examples/platforms/ubuntu/default  
      #
      # Snapped setup checklist:
      # - firewall_install - DONE
      # - ipforward_install - DONE
      # - rt_tables_install - DONE
      # - nat64_install
      # - dns64_install - WON'T DO
      # - network_manager_install - WON'T DO
      # - dhcpv6_pd_install - WON'T DO
      # - border_routing_install
      # - otbr_install - DONE

      # Setup scripts
      # TODO: This copies everything, even though most aren't required
      cp -vr ./script $CRAFT_PART_INSTALL/bin/
      chmod +x $CRAFT_PART_INSTALL/bin/script/otbr-firewall

      # TODO: Find a way to set INFRA_IF_NAME on runtime
      PLATFORM=ubuntu \
      BUILD_DIR=$PWD/build \
      INFRA_IF_NAME=wlan0 \
      OTBR_MDNS=avahi \
        $SNAPCRAFT_STAGE/snap/bin/otbr-build.sh
      
      # Binary distributions
      cp -v ./build/otbr/src/web/otbr-web \
            ./build/otbr/src/agent/otbr-agent \
            ./build/otbr/third_party/openthread/repo/src/posix/ot-ctl \
            $CRAFT_PART_INSTALL/bin/

      # Static web resources
      # See the layout mapping on top
      mkdir -p $CRAFT_PART_INSTALL/usr/share/otbr-web
      cp -vr /usr/share/otbr-web/frontend \
             $CRAFT_PART_INSTALL/usr/share/otbr-web/

      craftctl default

  license:
    plugin: nil
    source: .
    override-build: |
      install -DTv LICENSE $CRAFT_PART_INSTALL/usr/share/doc/LICENSE
